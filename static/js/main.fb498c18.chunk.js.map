{"version":3,"sources":["assets/images/logo.svg","components/Input/Input.tsx","assets/images/icon-person.svg","assets/images/icon-dollar.svg","components/Button/Button.tsx","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Input","id","name","hasError","placeholder","icon","height","fontSize","value","onChange","className","type","e","target","style","src","alt","Button","size","active","onClick","disabled","children","tipRates","receiptInformationInitialState","billAmount","tipRate","peopleCount","resultingAmountsInitialState","tipAmountPerPerson","totalAmountPerPerson","Main","useState","receiptInformation","setReceiptInformation","resultingAmounts","setResultingAmounts","showZeroError","setShowZeroError","activeButton","setActiveButton","chooseTipRate","useEffect","totalPerPerson","tipPerPerson","Infinity","calculateAmountsPerPerson","displayTotal","toFixed","receiptValuesInvalid","htmlFor","dollarIcon","map","rate","String","personIcon","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb498c18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import React, { FC } from 'react';\nimport './Input.scss';\n\ntype InputProps = {\n    id?: string;\n    name: string;\n    hasError?: boolean;\n    placeholder: string;\n    icon?: string;\n    height?: string;\n    fontSize?: string;\n    value: string;\n    onChange: (value: string) => void;\n}\n\nconst Input:FC<InputProps> = ({\n  id, name, hasError, placeholder, icon,\n  height, fontSize, value, onChange,\n}) => (\n  <div className=\"input--container\">\n    <input\n      id={id}\n      name={name}\n      type=\"text\"\n      placeholder={placeholder}\n      className={`input ${hasError && 'error'}`}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      style={{ height, fontSize }}\n    />\n    <img src={icon} alt=\"\" className=\"input__icon\" />\n  </div>\n);\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","import React, { FC } from 'react';\nimport './Button.scss';\n\ntype ButtonProps = {\n    size: 'small' | 'large';\n    active?: boolean;\n    onClick: () => void;\n    disabled?: boolean;\n}\n\nconst Button:FC<ButtonProps> = ({\n  size, active, onClick, disabled, children,\n}) => (\n  <button\n    className={`button ${size === 'small' && 'button-small'} ${size === 'large' && 'button-large'} ${active && 'active'}`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport './Main.scss';\nimport Input from '../Input/Input';\nimport personIcon from '../../assets/images/icon-person.svg';\nimport dollarIcon from '../../assets/images/icon-dollar.svg';\nimport Button from '../Button/Button';\n\nconst tipRates = [5, 10, 15, 25, 50];\n\ntype ReceiptInformationType = {\n  billAmount: string;\n  tipRate: string;\n  peopleCount: string;\n};\n\nconst receiptInformationInitialState = {\n  billAmount: '',\n  tipRate: '',\n  peopleCount: '',\n};\n\nconst resultingAmountsInitialState = {\n  tipAmountPerPerson: 0,\n  totalAmountPerPerson: 0,\n};\n\nconst Main = () => {\n  const [receiptInformation, setReceiptInformation] = useState<ReceiptInformationType>(receiptInformationInitialState);\n  const [resultingAmounts, setResultingAmounts] = useState(resultingAmountsInitialState);\n  const [showZeroError, setShowZeroError] = useState(false);\n  const [activeButton, setActiveButton] = useState(0);\n\n  const chooseTipRate = (value: string) => {\n    setReceiptInformation({ ...receiptInformation, tipRate: value });\n  };\n\n  const handleClick = (value: string) => {\n    chooseTipRate(value);\n    setActiveButton(+value);\n  };\n\n  const calculateAmountsPerPerson = () => {\n    const { tipRate, billAmount, peopleCount } = receiptInformation;\n\n    if (peopleCount === '0') {\n      setShowZeroError(true);\n      return;\n    }\n\n    const totalPerPerson = +billAmount / +peopleCount;\n    const tipPerPerson = totalPerPerson * (+tipRate / 100);\n\n    setShowZeroError(false);\n\n    if (totalPerPerson === Infinity) {\n      return;\n    }\n\n    setResultingAmounts({ tipAmountPerPerson: tipPerPerson, totalAmountPerPerson: totalPerPerson });\n  };\n\n  useEffect(() => {\n    calculateAmountsPerPerson();\n  }, [receiptInformation]);\n\n  const displayTotal = (value: number) => (value\n    ? value.toFixed(2)\n    : '0.00');\n\n  const handleDataReset = () => {\n    setReceiptInformation(receiptInformationInitialState);\n    setResultingAmounts(resultingAmountsInitialState);\n\n    setActiveButton(0);\n  };\n\n  const receiptValuesInvalid = (receiptInformation.peopleCount === ''\n      || receiptInformation.tipRate === ''\n      || receiptInformation.billAmount === ''\n      || receiptInformation.peopleCount === '0');\n\n  return (\n    <div className=\"main-section\">\n\n      <section className=\"main-section__input-part\">\n        <div className=\"input-part__item\">\n          <label htmlFor=\"amount\">\n            Bill\n          </label>\n          <Input\n            name=\"billAmount\"\n            id=\"amount\"\n            value={receiptInformation.billAmount}\n            onChange={(value) => {\n              setReceiptInformation({ ...receiptInformation, billAmount: value });\n            }}\n            placeholder=\"0\"\n            icon={dollarIcon}\n          />\n        </div>\n        <div className=\"input-part__item\">\n          <span>\n            Select Tip %\n          </span>\n          <div className=\"rate-choice-section\">\n            {tipRates.map((rate) => (\n              <div\n                key={rate}\n                className=\"rate\"\n              >\n                <Button\n                  size=\"small\"\n                  active={(rate === activeButton)}\n                  onClick={() => handleClick(String(rate))}\n                >\n                  {rate}\n                  %\n                </Button>\n              </div>\n            ))}\n            <div className=\"rate\">\n              <Input\n                name=\"tipRate\"\n                placeholder=\"Custom\"\n                value={(activeButton === 0) ? receiptInformation.tipRate : ''}\n                onChange={(value) => {\n                  chooseTipRate(value);\n                  setActiveButton(0);\n                }}\n                height=\"2.70rem\"\n                fontSize=\"20px\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"input-part__item\">\n          <div className=\"error-message--wrapper\">\n            <label htmlFor=\"people-count\">\n              Number of People\n            </label>\n            <div>{showZeroError && (<span className=\"error-message\">Can&apos;t be zero</span>)}</div>\n          </div>\n          <Input\n            name=\"peopleCount\"\n            hasError={showZeroError}\n            id=\"people-count\"\n            value={receiptInformation.peopleCount}\n            onChange={(value) => {\n              setReceiptInformation({ ...receiptInformation, peopleCount: value });\n            }}\n            placeholder=\"0\"\n            icon={personIcon}\n          />\n        </div>\n      </section>\n\n      <section className=\"main-section__output-part\">\n        <div className=\"output-part__items\">\n          <div className=\"output-part__item\">\n            <div className=\"label\">\n              <h2 className=\"label-heading\">\n                Tip Amount\n              </h2>\n              <span>/ person</span>\n            </div>\n            <div className=\"amount\">\n              $\n              {displayTotal(resultingAmounts.tipAmountPerPerson)}\n            </div>\n          </div>\n          <div className=\"output-part__item\">\n            <div className=\"label\">\n              <h2 className=\"label-heading\">\n                Total\n              </h2>\n              <span>/ person</span>\n            </div>\n            <div className=\"amount\">\n              $\n              {displayTotal(resultingAmounts.totalAmountPerPerson)}\n            </div>\n          </div>\n        </div>\n        <div>\n          <Button\n            size=\"large\"\n            onClick={handleDataReset}\n            disabled={receiptValuesInvalid}\n          >\n            RESET\n          </Button>\n        </div>\n      </section>\n\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\r\nimport './App.scss';\r\nimport logo from './assets/images/logo.svg';\r\nimport Main from './components/Main/Main';\r\n\r\nconst App = () => (\r\n  <div className=\"app-container\">\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <img src={logo} alt=\"Splitter Logo\" />\r\n      </header>\r\n      <Main />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.scss';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}